###OK & FEEL ###
setw -g xterm-keys on

set -g default-terminal "xterm-256color"

set -g default-terminal "screen-256color"

##default statusbar colors
set-option -g status-bg colour235
set-option -g status-fg colour7
#
# default window title colors
set-window-option -g window-status-fg colour120
set-window-option -g window-status-bg default
#
# active window title colors
set-window-option -g window-status-current-fg colour120
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

#set -g pane-border-bg colour235
set -g pane-border-fg colour238
#set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour120

# Enable mouse mode
set -g mouse on

setw -g monitor-activity on

# Use vim keybindings in copy mode
unbind '"'
unbind %
########################################################################
# Pane management / navigation
# navigation with C-{h,j,k,l} -- NO PREFIX
# https://gist.github.com/mislav/5189704
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# bind -n C-k run-shell 'tmux-vim-select-pane -U'
# bind -n C-j run-shell 'tmux-vim-select-pane -D'
# bind -n C-h run-shell 'tmux-vim-select-pane -L'
# bind -n C-l run-shell 'tmux-vim-select-pane -R'

# C-g C-k to passthrough a C-k
# C-k is consumed for pane navigation but we want it for kill-to-eol
unbind C-k
bind C-k send-key C-k


set-option -g allow-rename off

bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

#set-window-option -g mode-keys vi
#list-keys -T copy-mode-vi
#bind P paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
#bind-key -t vi-copy 'r' rectangle-toggle
# Vi copypaste mode
set-window-option -g mode-keys vi
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Buffers to/from Mac clipboard, yay tmux book from pragprog
bind -n C-s run "tmux save-buffer - | xclip -selection clipboard > /dev/null" \;
bind -n C-v run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; 

#if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
#if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'
